{
  "compilerOptions": {
    "lib": ["ESNext"],
    "target": "esnext",
    "moduleDetection": "force",
    "allowImportingTsExtensions": true,
    "noEmit": true,
    "composite": true,
    "downlevelIteration": true,
    "jsx": "react-jsx",
    "allowSyntheticDefaultImports": true,
    "allowJs": true,
    "types": [
      "bun-types" // add Bun global
    ],

    /* Modules */
    "module": "ESNext" /* Specify what module code is generated. */,
    "moduleResolution": "bundler" /* Specify how TypeScript looks up a file from a given module specifier. */,
    "paths": {
      /* Specify a set of entries that re-map imports to additional lookup locations. */
      "@/*": ["src/*"],
      "@context/*": ["src/context/*"],
      "@types/*": ["src/types/*"],
      "@app/*": ["src/app/*"],
      "@helper/*": ["src/helper/*"],
      "@service/*": ["src/service/*"]
    },
    "rootDir": ".",
    "baseUrl": "." /* Specify the base directory to resolve non-relative module names. */,
    "sourceMap": true /* Create source map files for emitted JavaScript files. */,
    "outDir": "./build" /* Specify an output folder for all emitted files. */,
    "removeComments": true /* Disable emitting comments. */,
    "newLine": "lf" /* Set the newline character for emitting files. */,

    /* Interop Constraints */
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

    /* Type Checking */
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
    "strictNullChecks": true /* When type checking, take into account 'null' and 'undefined'. */,
    "strictFunctionTypes": true /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */,
    "strictPropertyInitialization": true /* Check for class properties that are declared but not set in the constructor. */,
    "noImplicitThis": true /* Enable error reporting when 'this' is given the type 'any'. */,
    "useUnknownInCatchVariables": true /* Default catch clause variables as 'unknown' instead of 'any'. */,
    "alwaysStrict": true /* Ensure 'use strict' is always emitted. */,
    "noUnusedLocals": true /* Enable error reporting when local variables aren't read. */,
    "noUnusedParameters": true /* Raise an error when a function parameter isn't read. */,
    "noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */,

    /* Completeness */
    "skipDefaultLibCheck": true /* Skip type checking .d.ts files that are included with TypeScript. */,
    "skipLibCheck": true /* Skip type checking all .d.ts files. */
  },
  "include": [
    "src/**/*",
    "eslint.config.js"
  ] /* Specifies a list of glob patterns that match TypeScript files to be included in compilation. */,
  "exclude": [
    "node_modules",
    "build"
  ] /* Specifies a list of files to be excluded from compilation. */
}
